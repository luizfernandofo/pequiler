#ifndef TOKENS_HPP
#define TOKENS_HPP

enum TokenType {
    // Palavras reservadas
    TOKEN_PROGRAMA=1,
    TOKEN_CAR,
    TOKEN_INT,
    TOKEN_RETORNE,
    TOKEN_LEIA,
    TOKEN_ESCREVA,
    TOKEN_NOVALINHA,
    TOKEN_SE,
    TOKEN_ENTAO,
    TOKEN_SENAO,
    TOKEN_ENQUANTO,
    TOKEN_EXECUTE,

    // Operadores lógicos e relacionais
    TOKEN_OU,
    TOKEN_E,
    TOKEN_IGUAL,
    TOKEN_DIFERENTE,
    TOKEN_MENOR_IGUAL,
    TOKEN_MAIOR_IGUAL,
    TOKEN_MENOR,
    TOKEN_MAIOR,

    // Operadores aritméticos
    TOKEN_SOMA,
    TOKEN_SUBTRACAO,
    TOKEN_MULTIPLICACAO,
    TOKEN_DIVISAO,
    TOKEN_ATRIBUICAO,
    TOKEN_NEGACAO,

    // Pontuação
    TOKEN_PONTO_VIRGULA,
    TOKEN_VIRGULA,
    TOKEN_ABRE_PARENTESE,
    TOKEN_FECHA_PARENTESE,
    TOKEN_ABRE_CHAVE,
    TOKEN_FECHA_CHAVE,

    // Identificadores e literais
    TOKEN_ID,
    TOKEN_INT_LITERAL,
    TOKEN_STRING_LITERAL,

    // Erros
    TOKEN_ERRO_CADEIA_MULTILINHA,
    TOKEN_ERRO_CARACTERE_INVALIDO,
    TOKEN_ERRO_COMENTARIO_NAO_TERMINADO
};

#endif // TOKENS_HPP